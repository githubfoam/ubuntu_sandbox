name: "Ubuntu CI workflow"


on:
  push:
    branches: [ dev ]


jobs:

  # ubuntu-latest-from-source-job:
  #   name: "from source ubuntu-latest - Ubuntu 20.04"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status      
    # - name: "deploy x8"
    #   run: sudo make deploy-x8 


  ubuntu-2004-cuckoo-job:
    name: "ubuntu 20.04"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status      
    - name: "deploy cuckoo"
      run: sudo make deploy-cuckoo-2004  

  ubuntu-1804-cuckoo-job:
    name: "ubuntu-18.04"
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "deploy cuckoo"
      run: sudo make deploy-cuckoo-1804         

  ubuntu-1604-job:
    name: "ubuntu-16.04-cuckoo-job"
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "deploy cuckoo"
      run: sudo make deploy-cuckoo-1604 

  macos-latest-cuckoo:
      name: "cuckoo macos-latest 10.15.7"
      runs-on: macos-latest
      steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: "brew update"
        run: brew update      
      - name: "check on brew version"
        run: brew --version   #Homebrew 2.5.12   
      # - name: "brew cask list"
      #   run:   brew list --cask #Warning: Calling brew cask list is deprecated! Use brew list [--cask] instead.
      # - name: "brew list --formula"
      #   run: brew list --formula #List all the installed formulas
      - name: "Get OS X System Version"
        run: sw_vers       
      - name: "Get Mac System Details with system_profiler"
        run: system_profiler | more  
      - name: "osfingerprinting"
        run: uname -a    
      - name: "Installing Python libraries"
        run: brew install libmagic cairo pango openssl
      - name: "expose the openssl header files in the standard GCC/Clang include directory"
        run: cd /usr/local/include && ln -s ../opt/openssl/include/openssl .                                         


  # macos-110:
  #     name: "macos-11.0"
  #     runs-on: macos-11.0 # ProductVersion 11.0.1
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: "brew update"
  #       run: brew update      
  #     # - name: "brew upgrade"
  #     #   run: brew upgrade
  #     - name: "check on brew version"
  #       run: brew --version   #Homebrew 2.5.12   
  #     - name: "brew cask list"
  #       run:   brew list --cask #Warning: Calling brew cask list is deprecated! Use brew list [--cask] instead.
  #     - name: "brew list --formula"
  #       run: brew list --formula #List all the installed formulas
  #     - name: "Get OS X System Version"
  #       run: sw_vers       
  #     - name: "Get Mac System Details with system_profiler"
  #       run: system_profiler | more  
  #     - name: "osfingerprinting"
  #       run: uname -a                           
  #     # - name: "brew doctor"
  #     #   run: |
  #     #     brew doctor #Check brew for potential problems 

  # macos-1015:
  #     name: "macos-10.15"
  #     runs-on: macos-10.15 # ProductVersion 10.15.7
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: "brew update"
  #       run: brew update      
  #     # - name: "brew upgrade"
  #     #   run: brew upgrade
  #     - name: "check on brew version"
  #       run: brew --version   #Homebrew 2.5.12   
  #     - name: "brew cask list"
  #       run:   brew list --cask #Warning: Calling brew cask list is deprecated! Use brew list [--cask] instead.
  #     - name: "brew list --formula"
  #       run: brew list --formula #List all the installed formulas
  #     - name: "Get OS X System Version"
  #       run: sw_vers       
  #     - name: "Get Mac System Details with system_profiler"
  #       run: system_profiler | more  
  #     - name: "osfingerprinting"
  #       run: uname -a                           
  

  # ubuntu-latest-nxlog-job:
  #   name: "ubuntu-latest - Ubuntu 20.04"
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status      
  #   - name: "deploy nxlog"
  #     run: sudo make deploy-nxlog    
    # - name: configure
    #   run: ./configure
    # - name: make
    #   run: make      
    # - name: make check
    #   run: make check
    # - name: make distcheck
    #   run: make distcheck  

  # ubuntu-1804-nxlog-job:
  #   name: "ubuntu-18.04"
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "deploy nxlog"
  #     run: sudo make deploy-nxlog  

  # ubuntu-1604-job:
  #   name: "ubuntu-16.04"
  #   runs-on: ubuntu-16.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status  
  #   - name: "deploy nxlog"
  #     run: sudo make deploy-nxlog        

  # ubuntu-1804-cuda-job:
  #   name: "ubuntu-18.04"
  #   runs-on: ubuntu-18.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "build cuda"
  #     run: sudo make deploy-cuda          
    

  # ubuntu-2004-zeppelin-job:
  #   name: "ubuntu-20.04"
  #   runs-on: ubuntu-20.04
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: "os fingerprinting"
  #     run: hostnamectl status 
  #   - name: "deploy zeppelin"
  #     run: sudo make deploy-zeppelin        